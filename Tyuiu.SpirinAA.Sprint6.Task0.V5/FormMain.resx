<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>